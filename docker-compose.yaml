version: "3.8"

networks:
  nango:
  a8sk8cg0swg0ww0w0ogoowog:   # your existing external Traefik network
    external: true

volumes:
  nango_db_data:

services:
  nango-db:
    image: postgres:16.0-alpine
    container_name: nango-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${NANGO_DB_USER:-nango}
      POSTGRES_PASSWORD: ${NANGO_DB_PASSWORD:-nango}
      POSTGRES_DB: ${NANGO_DB_NAME:-nango}
    volumes:
      - nango_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${NANGO_DB_USER:-nango} -d ${NANGO_DB_NAME:-nango}"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks: [nango]

  nango-redis:
    image: redis:7.2.4
    container_name: nango-redis
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks: [nango]

  nango-server:
    image: nangohq/nango-server:hosted-0.67.0
    container_name: nango-server
    platform: linux/amd64
    restart: unless-stopped
    depends_on:
      nango-db:    { condition: service_healthy }
      nango-redis: { condition: service_healthy }
    environment:
      # Ports inside the container
      SERVER_PORT: ${SERVER_PORT:-3003}
      NANGO_CONNECT_UI_PORT: ${NANGO_CONNECT_UI_PORT:-3009}

      # Required secrets
      NANGO_SECRET_KEY: ${NANGO_SECRET_KEY}
      NANGO_ENCRYPTION_KEY: ${NANGO_ENCRYPTION_KEY}

      # DB (internal)
      NANGO_DB_HOST: nango-db
      NANGO_DB_USER: ${NANGO_DB_USER:-nango}
      NANGO_DB_PASSWORD: ${NANGO_DB_PASSWORD:-nango}
      NANGO_DB_NAME: ${NANGO_DB_NAME:-nango}
      NANGO_DB_SSL: ${NANGO_DB_SSL:-false}
      NANGO_DB_POOL_MIN: ${NANGO_DB_POOL_MIN:-2}
      NANGO_DB_POOL_MAX: ${NANGO_DB_POOL_MAX:-10}
      RECORDS_DATABASE_URL: ${RECORDS_DATABASE_URL:-postgresql://nango:nango@nango-db:5432/nango}

      # Public URLs (must be HTTPS + your hostname)
      NANGO_SERVER_URL: ${NANGO_SERVER_URL:-https://nango.csa.competera.com}
      NANGO_PUBLIC_SERVER_URL: ${NANGO_PUBLIC_SERVER_URL:-https://nango.csa.competera.com}

      # Dashboard & Connect UI
      FLAG_AUTH_ENABLED: ${FLAG_AUTH_ENABLED:-true}
      NANGO_DASHBOARD_USERNAME: ${NANGO_DASHBOARD_USERNAME:-admin}
      NANGO_DASHBOARD_PASSWORD: ${NANGO_DASHBOARD_PASSWORD:-change-me}
      FLAG_SERVE_CONNECT_UI: ${FLAG_SERVE_CONNECT_UI:-true}
      NANGO_SERVER_WEBSOCKETS_PATH: ${NANGO_SERVER_WEBSOCKETS_PATH:-/socket}

      # CORS/iframes (relax while testing; tighten later)
      ALLOW_CORS_ORIGIN: ${ALLOW_CORS_ORIGIN:-[*]}
      ALLOW_IFRAME_ORIGIN: ${ALLOW_IFRAME_ORIGIN:-[*]}
      CSP_REPORT_ONLY: ${CSP_REPORT_ONLY:-true}

      # Logs
      LOG_LEVEL: ${LOG_LEVEL:-info}
      NANGO_LOGS_ENABLED: ${NANGO_LOGS_ENABLED:-false}

    # No host port publishes when using Traefik
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:${SERVER_PORT:-3003}/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - nango
      - a8sk8cg0swg0ww0w0ogoowog

    labels:
      traefik.enable: "true"
      traefik.docker.network: a8sk8cg0swg0ww0w0ogoowog

      # API (3003) via HTTPS
      traefik.http.routers.nango.rule: Host(`nango.csa.competera.com`)
      traefik.http.routers.nango.entrypoints: https
      traefik.http.routers.nango.tls: "true"
      traefik.http.routers.nango.tls.certresolver: letsencrypt
      traefik.http.services.nango.loadbalancer.server.port: "3003"

      # Connect UI (3009) at /connect
      traefik.http.routers.nango-connect.rule: Host(`nango.csa.competera.com`) && PathPrefix(`/connect`)
      traefik.http.routers.nango-connect.entrypoints: https
      traefik.http.routers.nango-connect.tls: "true"
      traefik.http.routers.nango-connect.tls.certresolver: letsencrypt
      traefik.http.services.nango-connect.loadbalancer.server.port: "3009"

      # Optional: redirect "/" â†’ "/dev"
      traefik.http.routers.nango-root.rule: Host(`nango.csa.competera.com`) && Path(`/`)
      traefik.http.routers.nango-root.entrypoints: https
      traefik.http.routers.nango-root.tls: "true"
      traefik.http.routers.nango-root.tls.certresolver: letsencrypt
      traefik.http.routers.nango-root.middlewares: nango-root-redirect
      traefik.http.middlewares.nango-root-redirect.redirectregex.regex: ^/$
      traefik.http.middlewares.nango-root-redirect.redirectregex.replacement: /dev