version: "3.9"

networks:
  nango:
  traefik:
    external: true

volumes:
  nango_db_data:

services:
  nango-db:
    image: postgres:16.0-alpine
    container_name: nango-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${NANGO_DB_USER:-nango}
      POSTGRES_PASSWORD: ${NANGO_DB_PASSWORD:-nango}
      POSTGRES_DB: ${NANGO_DB_NAME:-nango}
    # (optional) expose if you really need host access; otherwise remove
    # ports:
    #   - "15432:5432"
    volumes:
      - nango_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${NANGO_DB_USER:-nango} -d ${NANGO_DB_NAME:-nango}"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - nango

  nango-redis:
    image: redis:7.2.4
    container_name: nango-redis
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - nango

  nango-server:
    image: nangohq/nango-server:hosted-0.67.0
    container_name: nango-server
    platform: linux/amd64
    restart: unless-stopped
    depends_on:
      nango-db:
        condition: service_healthy
      nango-redis:
        condition: service_healthy
    environment:
      SERVER_PORT: ${SERVER_PORT:-3003}
      NANGO_CONNECT_UI_PORT: ${NANGO_CONNECT_UI_PORT:-3009}

      # required secrets
      NANGO_SECRET_KEY: ${NANGO_SECRET_KEY}
      NANGO_ENCRYPTION_KEY: ${NANGO_ENCRYPTION_KEY}

      # DB
      NANGO_DB_HOST: ${NANGO_DB_HOST:-nango-db}
      NANGO_DB_USER: ${NANGO_DB_USER:-nango}
      NANGO_DB_PASSWORD: ${NANGO_DB_PASSWORD:-nango}
      NANGO_DB_NAME: ${NANGO_DB_NAME:-nango}
      NANGO_DB_SSL: ${NANGO_DB_SSL:-false}
      NANGO_DB_POOL_MIN: ${NANGO_DB_POOL_MIN:-2}
      NANGO_DB_POOL_MAX: ${NANGO_DB_POOL_MAX:-10}
      RECORDS_DATABASE_URL: ${RECORDS_DATABASE_URL:-postgresql://nango:nango@nango-db:5432/nango}

      # public URLs (https)
      NANGO_SERVER_URL: ${NANGO_SERVER_URL:-https://nango.csa.competera.com}
      NANGO_PUBLIC_SERVER_URL: ${NANGO_PUBLIC_SERVER_URL:-https://nango.csa.competera.com}

      # dashboard & UI
      FLAG_AUTH_ENABLED: ${FLAG_AUTH_ENABLED:-true}
      NANGO_DASHBOARD_USERNAME: ${NANGO_DASHBOARD_USERNAME:-admin}
      NANGO_DASHBOARD_PASSWORD: ${NANGO_DASHBOARD_PASSWORD:-change-me}
      FLAG_SERVE_CONNECT_UI: ${FLAG_SERVE_CONNECT_UI:-true}
      NANGO_SERVER_WEBSOCKETS_PATH: ${NANGO_SERVER_WEBSOCKETS_PATH:-/socket}

      # logging
      NANGO_LOGS_ENABLED: ${NANGO_LOGS_ENABLED:-false}
      NANGO_LOGS_ES_URL: ${NANGO_LOGS_ES_URL:-http://nango-elasticsearch:9200}
      NANGO_LOGS_ES_USER: ${NANGO_LOGS_ES_USER:-}
      NANGO_LOGS_ES_PWD: ${NANGO_LOGS_ES_PWD:-}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      CSP_REPORT_ONLY: ${CSP_REPORT_ONLY:-true}

    # no host ports when using Traefik
    ports:
      - "3003:3003"
      - "3009:3009"

    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:${SERVER_PORT:-3003}/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20

    networks:
      - nango
      - traefik

    labels:
      traefik.enable: "true"

      # --- HTTPS router for API (port 3003) ---
      traefik.http.routers.nango.rule: Host(`nango.csa.competera.com`)
      traefik.http.routers.nango.entrypoints: websecure
      traefik.http.routers.nango.tls: "true"
      traefik.http.routers.nango.tls.certresolver: letsencrypt
      traefik.http.services.nango.loadbalancer.server.port: "3003"
      traefik.http.routers.nango.middlewares: nango-headers

      # Optional HTTP->HTTPS redirect for API
      traefik.http.routers.nango-http.rule: Host(`nango.csa.competera.com`)
      traefik.http.routers.nango-http.entrypoints: web
      traefik.http.routers.nango-http.middlewares: redirect-https

      # --- HTTPS router for Connect UI (port 3009) on /connect ---
      traefik.http.routers.nango-connect.rule: Host(`nango.csa.competera.com`) && PathPrefix(`/connect`)
      traefik.http.routers.nango-connect.entrypoints: websecure
      traefik.http.routers.nango-connect.tls: "true"
      traefik.http.routers.nango-connect.tls.certresolver: letsencrypt
      traefik.http.services.nango-connect.loadbalancer.server.port: "3009"
      traefik.http.routers.nango-connect.middlewares: nango-headers

      # Optional HTTP->HTTPS redirect for Connect UI
      traefik.http.routers.nango-connect-http.rule: Host(`nango.csa.competera.com`) && PathPrefix(`/connect`)
      traefik.http.routers.nango-connect-http.entrypoints: web
      traefik.http.routers.nango-connect-http.middlewares: redirect-https

      # middlewares
      traefik.http.middlewares.redirect-https.redirectscheme.scheme: https

      # allow embedding & websocket friendly headers (only if you truly need iframes)
      traefik.http.middlewares.nango-headers.headers.customResponseHeaders.X-Frame-Options: ALLOWALL
      traefik.http.middlewares.nango-headers.headers.customResponseHeaders.Content-Security-Policy: frame-ancestors *;